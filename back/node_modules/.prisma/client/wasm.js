
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  email: 'email',
  role: 'role',
  direction: 'direction'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  title: 'title',
  code: 'code',
  description: 'description',
  startDate: 'startDate',
  dateSouhaite: 'dateSouhaite',
  endDate: 'endDate',
  direction: 'direction',
  kpi: 'kpi',
  modeGouvernance: 'modeGouvernance',
  state: 'state',
  type: 'type',
  createdById: 'createdById',
  sessionId: 'sessionId',
  decisionId: 'decisionId',
  createdAt: 'createdAt',
  sharepoint: 'sharepoint',
  modeTraitement: 'modeTraitement',
  natureProjet: 'natureProjet',
  optionTTM: 'optionTTM',
  jalonTTM: 'jalonTTM',
  prioriteStrategique: 'prioriteStrategique',
  objectifStrategique: 'objectifStrategique'
};

exports.Prisma.ProjectGuestScalarFieldEnum = {
  projectId: 'projectId',
  userId: 'userId'
};

exports.Prisma.InstanceScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  date: 'date',
  titre: 'titre',
  nom: 'nom',
  lieu: 'lieu',
  description: 'description',
  agendaId: 'agendaId'
};

exports.Prisma.AgendaScalarFieldEnum = {
  id: 'id',
  startDate: 'startDate',
  endDate: 'endDate'
};

exports.Prisma.DecisionScalarFieldEnum = {
  id: 'id',
  decision: 'decision',
  comments: 'comments',
  action: 'action',
  projectId: 'projectId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  CHEF_DE_PROJET: 'CHEF_DE_PROJET',
  PMO_DIRECTION: 'PMO_DIRECTION',
  EQUIPE_TTM: 'EQUIPE_TTM',
  CODIR: 'CODIR',
  AUTRES: 'AUTRES'
};

exports.ProjectState = exports.$Enums.ProjectState = {
  INITIATION: 'INITIATION',
  PMO_VALIDATION: 'PMO_VALIDATION',
  TTM_VALIDATION: 'TTM_VALIDATION',
  SCHEDULED: 'SCHEDULED'
};

exports.ProjectType = exports.$Enums.ProjectType = {
  COMOP: 'COMOP',
  CI: 'CI'
};

exports.DecisionType = exports.$Enums.DecisionType = {
  GO: 'GO',
  NO_GO: 'NO_GO',
  GO_AVEC_RESERVE: 'GO_AVEC_RESERVE'
};

exports.Prisma.ModelName = {
  User: 'User',
  Project: 'Project',
  ProjectGuest: 'ProjectGuest',
  Instance: 'Instance',
  Session: 'Session',
  Agenda: 'Agenda',
  Decision: 'Decision'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
