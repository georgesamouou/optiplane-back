generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum UserRole {
  CHEF_DE_PROJET
  PMO_DIRECTION
  EQUIPE_TTM
  CODIR
  AUTRES
}

enum ProjectState {
  INITIATION
  PMO_VALIDATION
  TTM_VALIDATION
  SCHEDULED
}

enum ProjectType {
  COMOP
  CI
}

enum DecisionType {
  GO
  NO_GO
  GO_AVEC_RESERVE
}

model User {
  id            Int            @id @default(autoincrement())
  username      String         @unique
  password      String
  email         String         @unique
  role          UserRole
  direction     String         @default("DG")
  projects      Project[]      @relation("UserProjects")
  guestProjects Project[]      @relation("GuestProjects") // Relation for guests
  ProjectGuest  ProjectGuest[]
  instances     Instance[]     @relation("InstanceMembers") // Relation for instances
}

model Project {
  id                  Int            @id @default(autoincrement())
  nom                 String
  title               String
  code                String         @unique
  description         String?
  startDate           DateTime?      @default(now())
  dateSouhaite        DateTime?
  endDate             DateTime?
  direction           String
  kpi                 String         @default("[]")
  modeGouvernance     String
  state               ProjectState   @default(INITIATION)
  type                ProjectType
  createdBy           User           @relation("UserProjects", fields: [createdById], references: [id])
  createdById         Int
  sessionId           Int?
  session             Session?       @relation(fields: [sessionId], references: [id])
  decision            Decision?      @relation
  decisionId          Int?
  createdAt           DateTime       @default(now())
  guests              User[]         @relation("GuestProjects") // Relation for guests
  sharepoint          String?
  modeTraitement      String
  natureProjet        String
  optionTTM           String
  jalonTTM            String
  prioriteStrategique String
  objectifStrategique String
  ProjectGuest        ProjectGuest[]
}

// Join table for many-to-many relationship
model ProjectGuest {
  projectId Int
  userId    Int
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([projectId, userId])
}

model Instance {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  members User[]   @relation("InstanceMembers") // Many-to-many relation with User
}

model Session {
  id          Int       @id @default(autoincrement())
  date        DateTime
  titre       String
  nom         String
  lieu        String
  description String
  projects    Project[]
  agenda      Agenda?   @relation(fields: [agendaId], references: [id])
  agendaId    Int?
}

model Agenda {
  id        Int       @id @default(autoincrement())
  startDate DateTime
  endDate   DateTime
  sessions  Session[]
}

model Decision {
  id        Int          @id @default(autoincrement())
  decision  DecisionType
  comments  String?
  action    String?
  project   Project      @relation(fields: [projectId], references: [id])
  projectId Int          @unique
}
